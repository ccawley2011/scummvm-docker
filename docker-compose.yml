version: "3"

services:
  web:
    image: nginx:latest
    depends_on:
      - buildbot
    networks:
      - web
    security_opt:
      - no-new-privileges
    user: nginx
    read_only: true
    tmpfs:
      - /var/cache/nginx:uid=101,gid=101
      - /run:uid=101,gid=101
    volumes:
      - ./web/default.conf:/etc/nginx/conf.d/default.conf:ro
      - snapshots:/data/snapshots:ro

  buildbot:
    image: scummvm/buildbot-master:latest
    environment:
      # The role used to allow access to administrative functions (manual
      # builds, rebuilds, cancelling builds, etc.)
      BUILDBOT_ADMIN_ROLE: scummvm

      # The URL for the buildmaster database. This should be placed on a
      # persistent volume.
      BUILDBOT_DATABASE: sqlite:////data/db/buildbot.sqlite

      # The IRC channel for the IRC status bot. If a channel is not provided,
      # the IRC bot is disabled.
      BUILDBOT_IRC_CHANNEL:

      # The username for the IRC status bot. If the username is not provided,
      # the IRC bot is disabled.
      BUILDBOT_IRC_USERNAME:

      # The URL to the canonical source repository.
      BUILDBOT_REPO_URL: https://github.com/csnover/scummvm.git

      # The name used for the title of the Builtbot site.
      BUILDBOT_SITE_TITLE: ScummVM

      # The URL used to link back to the main web site.
      BUILDBOT_SITE_URL: https://scummvm.org/

      # The publicly-accessible URL of the Buildbot web service.
      BUILDBOT_WEB_URL: http://localhost/

      # The internal port used by the web service.
      BUILDBOT_WEB_PORT: 28453 # B-U-I-L-D

      # The internal port used for master-worker communication. This does not
      # need to be exposed unless non-local workers need to connect to the
      # buildmaster. This must match the port given by `BUILDMASTER_PORT` below.
      BUILDBOT_WORKER_PORT: 28459 # B-U-I-L-W

      # If truthy, authentication is changed to use a basic authentication
      # with the login 'user'/'pass' instead of the normal GitHub
      # authentication.
      SCUMMVM_DEV_ENV: 1

      # The location of the configuration file containing the secrets used by
      # buildmaster services. Relative paths are relative to the directory
      # containing master.cfg.
      SCUMMVM_SECRETS_FILE: secrets.cfg

      # The default maximum number of snapshots that are maintained for a given
      # builder. Individual builders can override this to maintain a different
      # number of snapshots.
      SCUMMVM_SNAPSHOTS_DEFAULT_MAX: 2

      # The directory on the buildmaster where snapshots should be stored. If a
      # directory is not provided, snapshot packaging is disabled.
      SCUMMVM_SNAPSHOTS_DIR: /data/snapshots

      # The publicly-accessible URL to the generated snapshots. If a URL is not
      # provided, snapshot packaging is disabled.
      SCUMMVM_SNAPSHOTS_URL: http://localhost/snapshots/

      # The location of worker configuration files. Relative paths are relative
      # to the directory containing master.cfg.
      SCUMMVM_WORKER_CONFIG_DIR: ./config/workers

    networks:
      - builders
      - web
    security_opt:
      - no-new-privileges
    read_only: true
    tmpfs:
      - /var/lib/buildbot:uid=2845,gid=2845
    volumes:
      - database:/data/db
      - snapshots:/data/snapshots
      - ./master/master.cfg:/var/lib/buildbot/master.cfg:ro
      # Since it is not possible to mount a read only volume into another read
      # only volume, and Buildbot reserves the `workers` directory in the root
      # Buildbot working directory for its own Buildmaster workers, the whole
      # configuration gets mounted into a subdirectory, which is made to look
      # like a module namespace by giving it an empty __init__.py, and then we
      # load data from there.
      - ./master/__init__.py:/var/lib/buildbot/config/__init__.py:ro
      - ./master:/var/lib/buildbot/config/master:ro
      - ./workers:/var/lib/buildbot/config/workers:ro
      - ./secrets.cfg:/var/lib/buildbot/secrets.cfg:ro

  debian-x86_64: &defaultWorker
    image: scummvm/buildbot-debian-x86_64:latest
    environment: &defaultEnv
      # The IP address or hostname of the buildmaster.
      BUILDMASTER: buildbot

      # The port used to connect to the buildmaster. This must match the port
      # given by `BUILDBOT_WORKER_PORT` above.
      BUILDMASTER_PORT: 28459

      # Whether the worker's compiler cache should be compressed on disk.
      CCACHE_COMPRESS: 1

      # The location of the worker's compiler cache.
      CCACHE_DIR: /data/ccache/debian-x86_64

      # The maximum size of the worker's compiler cache. As of December 2017,
      # one build uses between 150 and 215MB of cache.
      CCACHE_MAXSIZE: 250Mi

      # The name of the worker. This is the name that will be used to generate
      # the names of builders attached to this worker, as well as the name that
      # is used when authenticating with the buildmaster.
      WORKERNAME: debian-x86_64

      # The password used for connecting to the buildmaster. This does not need
      # to be secure unless the buildmaster's worker port is exposed to the
      # internet, in which case it should be a strong password. This password
      # must match the password given in `secrets.cfg`.
      WORKERPASS: worker

      # The name of the container's host. Used for exclusive locking of workers
      # that run on the same container host.
      WORKER_HOST: build1

      # The directory where shared repository data can be accessed. This
      # directory must be writable by the `buildbot` user, which must currently
      # be done by creating and `chown`ing the directory from the worker's
      # Dockerfile.
      WORKER_REPO_DIR: /data/sharedrepo

      # Environment variables with these names will not be exposed in the
      # Buildbot worker. This functionality assuming you are using the standard
      # `buildbot.tac` template, because this is the file responsible for
      # clearing the environment variables when the Buildbot worker starts.
      WORKER_ENVIRONMENT_BLACKLIST: WORKERNAME WORKERPASS WORKER_ENVIRONMENT_BLACKLIST BUILDMASTER* DOCKER_BUILDBOT* BUILDBOT_ENV_* BUILDBOT_1*

    networks:
      - builders

    security_opt:
      - no-new-privileges

    # The volumes list cannot be inherited in at least docker-compose 1.16, so
    # make sure to check for any reuse of volumes in any of the workers below
    # if you change these!
    volumes:
      - ccache:/data/ccache
      - repository:/data/sharedrepo

  amigaos:
    <<: *defaultWorker
    image: scummvm/buildbot-amigaos:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/amigaos
      WORKERNAME: amigaos

  android:
    <<: *defaultWorker
    image: scummvm/buildbot-android:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/android
      WORKERNAME: android
    volumes:
      # The Android home directory is where Android stores the default signing
      # keys for the build
      - android-home:/buildbot/.android
      - ccache:/data/ccache
      - repository:/data/sharedrepo

  debian-x86:
    <<: *defaultWorker
    image: scummvm/buildbot-debian-x86:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/debian-x86
      WORKERNAME: debian-x86

  dreamcast:
    <<: *defaultWorker
    image: scummvm/buildbot-dreamcast:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/dreamcast
      WORKERNAME: dreamcast

  freemint:
    <<: *defaultWorker
    image: scummvm/buildbot-freemint:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/freemint
      WORKERNAME: freemint

  gcw0:
    <<: *defaultWorker
    image: scummvm/buildbot-gcw0:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/gcw0
      WORKERNAME: gcw0

  haiku:
    <<: *defaultWorker
    image: scummvm/buildbot-haiku:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/haiku
      WORKERNAME: haiku

  ios:
    <<: *defaultWorker
    image: scummvm/buildbot-ios:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/ios
      WORKERNAME: ios

  macos:
    <<: *defaultWorker
    image: scummvm/buildbot-macos:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/macos
      WORKERNAME: macos

  nintendo:
    <<: *defaultWorker
    image: scummvm/buildbot-nintendo:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/nintendo
      WORKERNAME: nintendo

  maemo:
    <<: *defaultWorker
    image: scummvm/buildbot-maemo:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/maemo
      WORKERNAME: maemo

  psp:
    <<: *defaultWorker
    image: scummvm/buildbot-psp:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/psp
      WORKERNAME: psp

  ps3:
    <<: *defaultWorker
    image: scummvm/buildbot-ps3:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/ps3
      WORKERNAME: ps3

  raspberrypi:
    <<: *defaultWorker
    image: scummvm/buildbot-raspberrypi:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/raspberrypi
      WORKERNAME: raspberrypi

  vita:
    <<: *defaultWorker
    image: scummvm/buildbot-vita:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/vita
      WORKERNAME: vita

  wince:
    <<: *defaultWorker
    image: scummvm/buildbot-wince:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/wince
      WORKERNAME: wince

  windows:
    <<: *defaultWorker
    image: scummvm/buildbot-windows:latest
    environment:
      <<: *defaultEnv
      CCACHE_DIR: /data/ccache/windows
      WORKERNAME: windows

volumes:
  android-home:
  ccache:
  database:
  repository:
  snapshots:

networks:
  builders:
  web:
